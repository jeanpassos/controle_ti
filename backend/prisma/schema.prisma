generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Equipamento {
  id                Int               @id @default(autoincrement())
  numero_serie      String?           @unique
  numero_patrimonio String            @unique
  modelo            String
  data_aquisicao    DateTime
  data_garantia     DateTime?
  observacoes       String?           @db.Text
  criado_em         DateTime          @default(now())
  atualizado_em     DateTime          @updatedAt
  criado_por        Int?
  atualizado_por    Int?
  deleted_at        DateTime?
  tipo_id           Int
  fabricante_id     Int
  status_id         Int
  departamento_id   Int?
  empresa_id        Int
  localizacao_id    Int?
  departamento      Departamento?     @relation(fields: [departamento_id], references: [id])
  empresa           Empresa           @relation(fields: [empresa_id], references: [id])
  fabricante        Fabricante        @relation(fields: [fabricante_id], references: [id])
  localizacao       Localizacao?      @relation(fields: [localizacao_id], references: [id])
  status            StatusEquipamento @relation(fields: [status_id], references: [id])
  tipo              TipoEquipamento   @relation(fields: [tipo_id], references: [id])
  movimentacoes     Movimentacao[]    @relation("EquipamentoMovimentacao")

  @@index([departamento_id], map: "equipamentos_departamento_id_fkey")
  @@index([empresa_id], map: "equipamentos_empresa_id_fkey")
  @@index([fabricante_id], map: "equipamentos_fabricante_id_fkey")
  @@index([localizacao_id], map: "equipamentos_localizacao_id_fkey")
  @@index([status_id], map: "equipamentos_status_id_fkey")
  @@index([tipo_id], map: "equipamentos_tipo_id_fkey")
  @@map("equipamentos")
}

model TipoEquipamento {
  id           Int           @id @default(autoincrement())
  nome         String        @unique
  descricao    String?       @db.Text
  ativo        Boolean       @default(true)
  equipamentos Equipamento[]

  @@map("tipos_equipamento")
}

model Fabricante {
  id           Int           @id @default(autoincrement())
  nome         String        @unique
  site         String?
  contato      String?
  telefone     String?
  email        String?
  ativo        Boolean       @default(true)
  equipamentos Equipamento[]

  @@map("fabricantes")
}

model StatusEquipamento {
  id              Int            @id @default(autoincrement())
  nome            String         @unique
  descricao       String?        @db.Text
  cor             String         @db.VarChar(7)
  ativo           Boolean        @default(true)
  equipamentos    Equipamento[]
  status_anterior Movimentacao[] @relation("StatusAnterior")
  status_novo     Movimentacao[] @relation("StatusNovo")

  @@map("status_equipamento")
}

model Estado {
  id      Int      @id @default(autoincrement())
  nome    String   @unique
  sigla   String   @unique @db.Char(2)
  cidades Cidade[]

  @@map("estados")
}

model Cidade {
  id          Int       @id @default(autoincrement())
  nome        String
  estado_id   Int
  codigo_ibge String?
  estado      Estado    @relation(fields: [estado_id], references: [id])
  empresas    Empresa[]

  @@index([estado_id], map: "cidades_estado_id_fkey")
  @@map("cidades")
}

model Departamento {
  id             Int           @id @default(autoincrement())
  nome           String        @unique
  descricao      String?       @db.Text
  responsavel_id Int?
  ativo          Boolean       @default(true)
  responsavel    Usuario?      @relation("DepartamentoResponsavel", fields: [responsavel_id], references: [id])
  equipamentos   Equipamento[]
  usuarios       Usuario[]     @relation("UsuarioDepartamento")

  @@index([responsavel_id], map: "departamentos_responsavel_id_fkey")
  @@map("departamentos")
}

model Empresa {
  id           Int           @id @default(autoincrement())
  nome         String
  razao_social String?
  cnpj         String        @unique
  endereco     String?
  cidade_id    Int?
  telefone     String?
  email        String?
  ativo        Boolean       @default(true)
  cidade       Cidade?       @relation(fields: [cidade_id], references: [id])
  equipamentos Equipamento[]
  localizacoes Localizacao[]
  usuarios     Usuario[]

  @@index([cidade_id], map: "empresas_cidade_id_fkey")
  @@map("empresas")
}

model Localizacao {
  id                   Int            @id @default(autoincrement())
  nome                 String
  andar                String?
  sala                 String?
  descricao            String?        @db.Text
  empresa_id           Int
  ativo                Boolean        @default(true)
  equipamentos         Equipamento[]
  empresa              Empresa        @relation(fields: [empresa_id], references: [id])
  localizacao_anterior Movimentacao[] @relation("LocalizacaoAnterior")
  localizacao_nova     Movimentacao[] @relation("LocalizacaoNova")

  @@index([empresa_id], map: "localizacoes_empresa_id_fkey")
  @@map("localizacoes")
}

model NivelAcesso {
  id         Int       @id @default(autoincrement())
  nome       String    @unique
  descricao  String?   @db.Text
  permissoes String?   @db.LongText
  usuarios   Usuario[]

  @@map("niveis_acesso")
}

model Usuario {
  id                        Int            @id @default(autoincrement())
  nome                      String
  email                     String         @unique
  senha                     String
  nivel_id                  Int
  departamento_id           Int?
  empresa_id                Int?
  ativo                     Boolean        @default(true)
  ultima_senha              DateTime?
  tentativas_login          Int            @default(0)
  dois_fatores              Boolean        @default(false)
  chave_dois_fatores        String?
  ultimo_login              DateTime?
  criado_em                 DateTime       @default(now())
  atualizado_em             DateTime       @updatedAt
  configuracoes             Configuracao[]
  departamentos_gerenciados Departamento[] @relation("DepartamentoResponsavel")
  logs_auditoria            LogAuditoria[]
  movimentacoes             Movimentacao[]
  refresh_tokens            RefreshToken[]
  temas                     Tema[]
  departamento              Departamento?  @relation("UsuarioDepartamento", fields: [departamento_id], references: [id])
  empresa                   Empresa?       @relation(fields: [empresa_id], references: [id])
  nivel                     NivelAcesso    @relation(fields: [nivel_id], references: [id])

  @@index([departamento_id], map: "usuarios_departamento_id_fkey")
  @@index([empresa_id], map: "usuarios_empresa_id_fkey")
  @@index([nivel_id], map: "usuarios_nivel_id_fkey")
  @@map("usuarios")
}

model Movimentacao {
  id                      Int                @id @default(autoincrement())
  equipamento_id          Int
  status_anterior_id      Int?
  status_novo_id          Int?
  localizacao_anterior_id Int?
  localizacao_nova_id     Int?
  usuario_id              Int
  data_movimentacao       DateTime           @default(now())
  observacoes             String?            @db.Text
  equipamento             Equipamento        @relation("EquipamentoMovimentacao", fields: [equipamento_id], references: [id])
  localizacao_anterior    Localizacao?       @relation("LocalizacaoAnterior", fields: [localizacao_anterior_id], references: [id])
  localizacao_nova        Localizacao?       @relation("LocalizacaoNova", fields: [localizacao_nova_id], references: [id])
  status_anterior         StatusEquipamento? @relation("StatusAnterior", fields: [status_anterior_id], references: [id])
  status_novo             StatusEquipamento? @relation("StatusNovo", fields: [status_novo_id], references: [id])
  usuario                 Usuario            @relation(fields: [usuario_id], references: [id])

  @@index([equipamento_id], map: "movimentacoes_equipamento_id_fkey")
  @@index([localizacao_anterior_id], map: "movimentacoes_localizacao_anterior_id_fkey")
  @@index([localizacao_nova_id], map: "movimentacoes_localizacao_nova_id_fkey")
  @@index([status_anterior_id], map: "movimentacoes_status_anterior_id_fkey")
  @@index([status_novo_id], map: "movimentacoes_status_novo_id_fkey")
  @@index([usuario_id], map: "movimentacoes_usuario_id_fkey")
  @@map("movimentacoes")
}

model Configuracao {
  id             Int      @id @default(autoincrement())
  chave          String   @unique
  valor          String   @db.Text
  grupo          String
  descricao      String?  @db.Text
  tipo           String
  visivel        Boolean  @default(true)
  restrito       Boolean  @default(false)
  ordem          Int      @default(0)
  atualizado_em  DateTime @updatedAt
  usuario_id     Int?
  atualizado_por Usuario? @relation(fields: [usuario_id], references: [id])

  @@index([usuario_id], map: "configuracoes_usuario_id_fkey")
  @@map("configuracoes")
}

model LogAuditoria {
  id               Int      @id @default(autoincrement())
  usuario_id       Int?
  data_hora        DateTime @default(now())
  acao             String
  tabela           String?
  registro_id      Int?
  dados_anteriores String?  @db.LongText
  dados_novos      String?  @db.LongText
  ip               String?
  user_agent       String?  @db.Text
  usuario          Usuario? @relation(fields: [usuario_id], references: [id])

  @@index([usuario_id], map: "logs_auditoria_usuario_id_fkey")
  @@map("logs_auditoria")
}

model MenuItem {
  id            Int        @id @default(autoincrement())
  titulo        String
  descricao     String?    @db.Text
  icone         String?
  url           String?
  componente    String?
  ordem         Int        @default(0)
  ativo         Boolean    @default(true)
  externo       Boolean    @default(false)
  requer_auth   Boolean    @default(true)
  nivel_min     Int        @default(1)
  permissoes    String?
  pai_id        Int?
  criado_em     DateTime   @default(now())
  atualizado_em DateTime   @updatedAt
  pai           MenuItem?  @relation("SubMenus", fields: [pai_id], references: [id])
  filhos        MenuItem[] @relation("SubMenus")

  @@index([pai_id], map: "menu_items_pai_id_fkey")
  @@map("menu_items")
}

model Tema {
  id               Int      @id @default(autoincrement())
  nome             String   @unique
  descricao        String?  @db.Text
  cor_primaria     String   @default("#0284c7") @db.VarChar(7)
  cor_secundaria   String   @default("#0d9488") @db.VarChar(7)
  cor_fundo_claro  String   @default("#f8fafc") @db.VarChar(7)
  cor_fundo_escuro String   @default("#0f172a") @db.VarChar(7)
  cor_texto_claro  String   @default("#1e293b") @db.VarChar(7)
  cor_texto_escuro String   @default("#f1f5f9") @db.VarChar(7)
  logo_url         String?
  favicon_url      String?
  fonte_principal  String   @default("Inter")
  padrao           Boolean  @default(false)
  personalizado    Boolean  @default(false)
  ativo            Boolean  @default(true)
  css_custom       String?  @db.Text
  usuario_id       Int?
  criado_em        DateTime @default(now())
  atualizado_em    DateTime @updatedAt
  usuario          Usuario? @relation(fields: [usuario_id], references: [id])

  @@index([usuario_id], map: "temas_usuario_id_fkey")
  @@map("temas")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique @db.VarChar(512)
  expiresAt DateTime
  usuarioId Int
  criado_em DateTime @default(now())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@index([usuarioId], map: "refresh_tokens_usuarioId_fkey")
  @@map("refresh_tokens")
}
